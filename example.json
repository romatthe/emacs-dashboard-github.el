[
  {
    "id": "9737833929",
    "type": "ForkEvent",
    "actor": {
      "id": 630306,
      "login": "paf31",
      "display_login": "paf31",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paf31",
      "avatar_url": "https://avatars.githubusercontent.com/u/630306?"
    },
    "repo": {
      "id": 79475397,
      "name": "agrafix/format-numbers",
      "url": "https://api.github.com/repos/agrafix/format-numbers"
    },
    "payload": {
      "forkee": {
        "id": 189661548,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODk2NjE1NDg=",
        "name": "format-numbers",
        "full_name": "paf31/format-numbers",
        "private": false,
        "owner": {
          "login": "paf31",
          "id": 630306,
          "node_id": "MDQ6VXNlcjYzMDMwNg==",
          "avatar_url": "https://avatars0.githubusercontent.com/u/630306?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/paf31",
          "html_url": "https://github.com/paf31",
          "followers_url": "https://api.github.com/users/paf31/followers",
          "following_url": "https://api.github.com/users/paf31/following{/other_user}",
          "gists_url": "https://api.github.com/users/paf31/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/paf31/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/paf31/subscriptions",
          "organizations_url": "https://api.github.com/users/paf31/orgs",
          "repos_url": "https://api.github.com/users/paf31/repos",
          "events_url": "https://api.github.com/users/paf31/events{/privacy}",
          "received_events_url": "https://api.github.com/users/paf31/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/paf31/format-numbers",
        "description": "Haskell: Various number formatting functions",
        "fork": true,
        "url": "https://api.github.com/repos/paf31/format-numbers",
        "forks_url": "https://api.github.com/repos/paf31/format-numbers/forks",
        "keys_url": "https://api.github.com/repos/paf31/format-numbers/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/paf31/format-numbers/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/paf31/format-numbers/teams",
        "hooks_url": "https://api.github.com/repos/paf31/format-numbers/hooks",
        "issue_events_url": "https://api.github.com/repos/paf31/format-numbers/issues/events{/number}",
        "events_url": "https://api.github.com/repos/paf31/format-numbers/events",
        "assignees_url": "https://api.github.com/repos/paf31/format-numbers/assignees{/user}",
        "branches_url": "https://api.github.com/repos/paf31/format-numbers/branches{/branch}",
        "tags_url": "https://api.github.com/repos/paf31/format-numbers/tags",
        "blobs_url": "https://api.github.com/repos/paf31/format-numbers/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/paf31/format-numbers/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/paf31/format-numbers/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/paf31/format-numbers/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/paf31/format-numbers/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/paf31/format-numbers/languages",
        "stargazers_url": "https://api.github.com/repos/paf31/format-numbers/stargazers",
        "contributors_url": "https://api.github.com/repos/paf31/format-numbers/contributors",
        "subscribers_url": "https://api.github.com/repos/paf31/format-numbers/subscribers",
        "subscription_url": "https://api.github.com/repos/paf31/format-numbers/subscription",
        "commits_url": "https://api.github.com/repos/paf31/format-numbers/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/paf31/format-numbers/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/paf31/format-numbers/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/paf31/format-numbers/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/paf31/format-numbers/contents/{+path}",
        "compare_url": "https://api.github.com/repos/paf31/format-numbers/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/paf31/format-numbers/merges",
        "archive_url": "https://api.github.com/repos/paf31/format-numbers/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/paf31/format-numbers/downloads",
        "issues_url": "https://api.github.com/repos/paf31/format-numbers/issues{/number}",
        "pulls_url": "https://api.github.com/repos/paf31/format-numbers/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/paf31/format-numbers/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/paf31/format-numbers/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/paf31/format-numbers/labels{/name}",
        "releases_url": "https://api.github.com/repos/paf31/format-numbers/releases{/id}",
        "deployments_url": "https://api.github.com/repos/paf31/format-numbers/deployments",
        "created_at": "2019-05-31T21:39:29Z",
        "updated_at": "2018-06-26T12:32:50Z",
        "pushed_at": "2017-01-19T17:36:33Z",
        "git_url": "git://github.com/paf31/format-numbers.git",
        "ssh_url": "git@github.com:paf31/format-numbers.git",
        "clone_url": "https://github.com/paf31/format-numbers.git",
        "svn_url": "https://github.com/paf31/format-numbers",
        "homepage": null,
        "size": 4,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": false,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "node_id": "MDc6TGljZW5zZTEz"
        },
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "master",
        "public": true
      }
    },
    "public": true,
    "created_at": "2019-05-31T21:39:29Z"
  },
  {
    "id": "9737157623",
    "type": "ForkEvent",
    "actor": {
      "id": 2664959,
      "login": "Fuco1",
      "display_login": "Fuco1",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fuco1",
      "avatar_url": "https://avatars.githubusercontent.com/u/2664959?"
    },
    "repo": {
      "id": 15284487,
      "name": "rejeep/nvm.el",
      "url": "https://api.github.com/repos/rejeep/nvm.el"
    },
    "payload": {
      "forkee": {
        "id": 189647957,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODk2NDc5NTc=",
        "name": "nvm.el",
        "full_name": "Fuco1/nvm.el",
        "private": false,
        "owner": {
          "login": "Fuco1",
          "id": 2664959,
          "node_id": "MDQ6VXNlcjI2NjQ5NTk=",
          "avatar_url": "https://avatars0.githubusercontent.com/u/2664959?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Fuco1",
          "html_url": "https://github.com/Fuco1",
          "followers_url": "https://api.github.com/users/Fuco1/followers",
          "following_url": "https://api.github.com/users/Fuco1/following{/other_user}",
          "gists_url": "https://api.github.com/users/Fuco1/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Fuco1/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Fuco1/subscriptions",
          "organizations_url": "https://api.github.com/users/Fuco1/orgs",
          "repos_url": "https://api.github.com/users/Fuco1/repos",
          "events_url": "https://api.github.com/users/Fuco1/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Fuco1/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/Fuco1/nvm.el",
        "description": "Manage Node versions within Emacs",
        "fork": true,
        "url": "https://api.github.com/repos/Fuco1/nvm.el",
        "forks_url": "https://api.github.com/repos/Fuco1/nvm.el/forks",
        "keys_url": "https://api.github.com/repos/Fuco1/nvm.el/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/Fuco1/nvm.el/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/Fuco1/nvm.el/teams",
        "hooks_url": "https://api.github.com/repos/Fuco1/nvm.el/hooks",
        "issue_events_url": "https://api.github.com/repos/Fuco1/nvm.el/issues/events{/number}",
        "events_url": "https://api.github.com/repos/Fuco1/nvm.el/events",
        "assignees_url": "https://api.github.com/repos/Fuco1/nvm.el/assignees{/user}",
        "branches_url": "https://api.github.com/repos/Fuco1/nvm.el/branches{/branch}",
        "tags_url": "https://api.github.com/repos/Fuco1/nvm.el/tags",
        "blobs_url": "https://api.github.com/repos/Fuco1/nvm.el/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/Fuco1/nvm.el/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/Fuco1/nvm.el/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/Fuco1/nvm.el/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/Fuco1/nvm.el/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/Fuco1/nvm.el/languages",
        "stargazers_url": "https://api.github.com/repos/Fuco1/nvm.el/stargazers",
        "contributors_url": "https://api.github.com/repos/Fuco1/nvm.el/contributors",
        "subscribers_url": "https://api.github.com/repos/Fuco1/nvm.el/subscribers",
        "subscription_url": "https://api.github.com/repos/Fuco1/nvm.el/subscription",
        "commits_url": "https://api.github.com/repos/Fuco1/nvm.el/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/Fuco1/nvm.el/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/Fuco1/nvm.el/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/Fuco1/nvm.el/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/Fuco1/nvm.el/contents/{+path}",
        "compare_url": "https://api.github.com/repos/Fuco1/nvm.el/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/Fuco1/nvm.el/merges",
        "archive_url": "https://api.github.com/repos/Fuco1/nvm.el/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/Fuco1/nvm.el/downloads",
        "issues_url": "https://api.github.com/repos/Fuco1/nvm.el/issues{/number}",
        "pulls_url": "https://api.github.com/repos/Fuco1/nvm.el/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/Fuco1/nvm.el/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/Fuco1/nvm.el/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/Fuco1/nvm.el/labels{/name}",
        "releases_url": "https://api.github.com/repos/Fuco1/nvm.el/releases{/id}",
        "deployments_url": "https://api.github.com/repos/Fuco1/nvm.el/deployments",
        "created_at": "2019-05-31T19:30:07Z",
        "updated_at": "2019-02-04T03:21:04Z",
        "pushed_at": "2017-12-18T05:28:21Z",
        "git_url": "git://github.com/Fuco1/nvm.el.git",
        "ssh_url": "git@github.com:Fuco1/nvm.el.git",
        "clone_url": "https://github.com/Fuco1/nvm.el.git",
        "svn_url": "https://github.com/Fuco1/nvm.el",
        "homepage": "",
        "size": 21,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": false,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "master",
        "public": true
      }
    },
    "public": true,
    "created_at": "2019-05-31T19:30:07Z"
  },
  {
    "id": "9735919714",
    "type": "WatchEvent",
    "actor": {
      "id": 911911,
      "login": "begriffs",
      "display_login": "begriffs",
      "gravatar_id": "",
      "url": "https://api.github.com/users/begriffs",
      "avatar_url": "https://avatars.githubusercontent.com/u/911911?"
    },
    "repo": {
      "id": 189302655,
      "name": "robx/configurator-pg",
      "url": "https://api.github.com/repos/robx/configurator-pg"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-31T16:03:30Z"
  },
  {
    "id": "9732423571",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 356121,
      "login": "eriksvedang",
      "display_login": "eriksvedang",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eriksvedang",
      "avatar_url": "https://avatars.githubusercontent.com/u/356121?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/480",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/480/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/480/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/480/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/480",
        "id": 450606090,
        "node_id": "MDU6SXNzdWU0NTA2MDYwOTA=",
        "number": 480,
        "title": "Array: Clarify `remove` semantics?",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-05-31T04:09:24Z",
        "updated_at": "2019-05-31T06:48:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "(Sorry to generate so many issues (of varying legitimacy) lately, been putting the language through some paces!) \r\n\r\nIt's quite possible I'm just misunderstanding how binding works, so this may be a non-issue, please let me know!\r\n\r\nCurrently, `Array.remove` removes elements from an array 'in-place' and returns the resulting array. While there's nothing wrong with this behavior, it does result in some scenarios in which the semantics are a bit muddled. Consider the following example:\r\n\r\n```clojure\r\n(def my-array (the (Array Int) (zero)) ;; initialize an array and bind it to my-array\r\n\r\n(defn print-and-remove [] \r\n  (foreach [item my-array] \r\n    (do (IO.print item)\r\n           (remove item @&my-array))))\r\n```\r\n\r\nAt a glance, this seems to make intuitive sense: for each item in the array, print it, then remove it from the array, in place. I'd expect both functions in this case to be effectful types returning `()`. It is odd that we need to copy the bound array to manipulate it in place (on this point, I might be doing something wrong). \r\n\r\nIf you try to define this, you'll get an error: \r\n\r\n```\r\nI can’t match the types `(Array r17)` and `()` within `(do (let [item  ...  1)))`.\r\n\r\n  (let [item (Array.nth xs i)] (do (IO.print item) (Array.remove item (copy (ref my-array))))) : (Array r17)\r\n  At line 132, column 15 in '/Users/scottolsen/dev/Carp/core/Macros.carp'\r\n\r\n  Statement in do-expression : ()\r\n  At line 131, column 9 in '/Users/scottolsen/dev/Carp/core/Macros.carp'\r\n```\r\n\r\nThis is only problematic when iterating over the array with foreach--if we change the types to match, this works fine:\r\n\r\n```clojure\r\n(defn print-and-remove [] \r\n  (foreach [item my-array] \r\n    (do (IO.print item)\r\n           (set! my-array (remove item @&my-array)))))\r\n```\r\n\r\nBut `remove` removes elements in place... so it's redundant to call `set!` on `my-array`!\r\n...but also it's not, since we copied it to use it! (because that value was already owned by the binding). However, the initial reading of this code would suggest a redundancy and seems to conflict with my understanding of the term 'in-place'--I'd expect to not have to reset the value of a binding if the function operated on its value 'in-place'. But maybe this is a doc or personal issue? Maybe in-place is not the correct terminology here, or maybe I don't understand it properly?\r\n\r\nSince the majority of effectful operations in Carp return `()` I would expect an in-place operation to be treated as effectful, remove the elements from a referenced array and return `()`, while a `copy-filter` based implementation (`copy-remove`?) can return the resulting array.\r\n\r\nThat said, it looks as though `endo-filter` also returns the resulting array and takes ownership. I'll admit that I'm not entirely sure what taking ownership means when the value is bound to a variable as in the case above--is the variable unbound or reset upon the function's taking ownership--then it makes sense that we'd have to set again--but if we're copying anyway...does it make sense? Perhaps I'm wrongheaded on this one, but thought I'd bring it up in case it's a potential point of confusion for others too! This may just be one that warrants a quick remediation of my understanding and notions, then we can move merrily on. 😅 "
      },
      "comment": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/comments/497596513",
        "html_url": "https://github.com/carp-lang/Carp/issues/480#issuecomment-497596513",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/480",
        "id": 497596513,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzU5NjUxMw==",
        "user": {
          "login": "eriksvedang",
          "id": 356121,
          "node_id": "MDQ6VXNlcjM1NjEyMQ==",
          "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eriksvedang",
          "html_url": "https://github.com/eriksvedang",
          "followers_url": "https://api.github.com/users/eriksvedang/followers",
          "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
          "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
          "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
          "repos_url": "https://api.github.com/users/eriksvedang/repos",
          "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2019-05-31T06:48:02Z",
        "updated_at": "2019-05-31T06:48:02Z",
        "author_association": "COLLABORATOR",
        "body": "I understand that this is confusing, the documentation string should probably clarify \"in place\" a bit more – or use some other terminology there. What it means in this case is that the function `remove` won't copy the array internally but instead modify it and return the same instance. But yes, \"in place\" is used to describe the `!` family of functions to, that are effectful and return `()`. Do you have an idea for how to make the docs clearer in this regard?\r\n\r\nI don't think the name `copy-remove` is good since it doesn't copy. We could have a `remove!` function though, that would help you write the code you want to write above. The problem with mixing owning functions and loops (like `foreach`) is that the memory analyser doesn't know what will happen inside the owning function so it can't just give away the same piece of memory in each iteration (the owning function might just eat it). So you often get cleaner code if you use a more functional approach, like `map` / `filter` / `reduce` when using the owning functions. \r\n\r\nPerhaps try that, and if you're not happy with the result we can add a `remove!` function?  Please let us know how it goes and let's discuss this further here, it's really great to hear about the actual experience of using the language since that gives us information on what ideas work and what needs to be adjusted!"
      }
    },
    "public": true,
    "created_at": "2019-05-31T06:48:02Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9732360107",
    "type": "WatchEvent",
    "actor": {
      "id": 875324,
      "login": "dmjio",
      "display_login": "dmjio",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmjio",
      "avatar_url": "https://avatars.githubusercontent.com/u/875324?"
    },
    "repo": {
      "id": 189539038,
      "name": "dmjio/hello-rust-haskell-nix",
      "url": "https://api.github.com/repos/dmjio/hello-rust-haskell-nix"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-31T06:34:17Z"
  },
  {
    "id": "9732300818",
    "type": "ForkEvent",
    "actor": {
      "id": 875324,
      "login": "dmjio",
      "display_login": "dmjio",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmjio",
      "avatar_url": "https://avatars.githubusercontent.com/u/875324?"
    },
    "repo": {
      "id": 189534510,
      "name": "jwiegley/hello-rust",
      "url": "https://api.github.com/repos/jwiegley/hello-rust"
    },
    "payload": {
      "forkee": {
        "id": 189539038,
        "node_id": "MDEwOlJlcG9zaXRvcnkxODk1MzkwMzg=",
        "name": "hello-rust",
        "full_name": "dmjio/hello-rust",
        "private": false,
        "owner": {
          "login": "dmjio",
          "id": 875324,
          "node_id": "MDQ6VXNlcjg3NTMyNA==",
          "avatar_url": "https://avatars0.githubusercontent.com/u/875324?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/dmjio",
          "html_url": "https://github.com/dmjio",
          "followers_url": "https://api.github.com/users/dmjio/followers",
          "following_url": "https://api.github.com/users/dmjio/following{/other_user}",
          "gists_url": "https://api.github.com/users/dmjio/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/dmjio/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/dmjio/subscriptions",
          "organizations_url": "https://api.github.com/users/dmjio/orgs",
          "repos_url": "https://api.github.com/users/dmjio/repos",
          "events_url": "https://api.github.com/users/dmjio/events{/privacy}",
          "received_events_url": "https://api.github.com/users/dmjio/received_events",
          "type": "User",
          "site_admin": false
        },
        "html_url": "https://github.com/dmjio/hello-rust",
        "description": "A simple hello world in Rust, with a Nix environment",
        "fork": true,
        "url": "https://api.github.com/repos/dmjio/hello-rust",
        "forks_url": "https://api.github.com/repos/dmjio/hello-rust/forks",
        "keys_url": "https://api.github.com/repos/dmjio/hello-rust/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/dmjio/hello-rust/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/dmjio/hello-rust/teams",
        "hooks_url": "https://api.github.com/repos/dmjio/hello-rust/hooks",
        "issue_events_url": "https://api.github.com/repos/dmjio/hello-rust/issues/events{/number}",
        "events_url": "https://api.github.com/repos/dmjio/hello-rust/events",
        "assignees_url": "https://api.github.com/repos/dmjio/hello-rust/assignees{/user}",
        "branches_url": "https://api.github.com/repos/dmjio/hello-rust/branches{/branch}",
        "tags_url": "https://api.github.com/repos/dmjio/hello-rust/tags",
        "blobs_url": "https://api.github.com/repos/dmjio/hello-rust/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/dmjio/hello-rust/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/dmjio/hello-rust/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/dmjio/hello-rust/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/dmjio/hello-rust/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/dmjio/hello-rust/languages",
        "stargazers_url": "https://api.github.com/repos/dmjio/hello-rust/stargazers",
        "contributors_url": "https://api.github.com/repos/dmjio/hello-rust/contributors",
        "subscribers_url": "https://api.github.com/repos/dmjio/hello-rust/subscribers",
        "subscription_url": "https://api.github.com/repos/dmjio/hello-rust/subscription",
        "commits_url": "https://api.github.com/repos/dmjio/hello-rust/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/dmjio/hello-rust/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/dmjio/hello-rust/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/dmjio/hello-rust/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/dmjio/hello-rust/contents/{+path}",
        "compare_url": "https://api.github.com/repos/dmjio/hello-rust/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/dmjio/hello-rust/merges",
        "archive_url": "https://api.github.com/repos/dmjio/hello-rust/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/dmjio/hello-rust/downloads",
        "issues_url": "https://api.github.com/repos/dmjio/hello-rust/issues{/number}",
        "pulls_url": "https://api.github.com/repos/dmjio/hello-rust/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/dmjio/hello-rust/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/dmjio/hello-rust/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/dmjio/hello-rust/labels{/name}",
        "releases_url": "https://api.github.com/repos/dmjio/hello-rust/releases{/id}",
        "deployments_url": "https://api.github.com/repos/dmjio/hello-rust/deployments",
        "created_at": "2019-05-31T06:21:01Z",
        "updated_at": "2019-05-31T06:17:42Z",
        "pushed_at": "2019-05-31T06:17:40Z",
        "git_url": "git://github.com/dmjio/hello-rust.git",
        "ssh_url": "git@github.com:dmjio/hello-rust.git",
        "clone_url": "https://github.com/dmjio/hello-rust.git",
        "svn_url": "https://github.com/dmjio/hello-rust",
        "homepage": null,
        "size": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "language": null,
        "has_issues": false,
        "has_projects": true,
        "has_downloads": true,
        "has_wiki": true,
        "has_pages": false,
        "forks_count": 0,
        "mirror_url": null,
        "archived": false,
        "disabled": false,
        "open_issues_count": 0,
        "license": null,
        "forks": 0,
        "open_issues": 0,
        "watchers": 0,
        "default_branch": "master",
        "public": true
      }
    },
    "public": true,
    "created_at": "2019-05-31T06:21:01Z"
  },
  {
    "id": "9732161850",
    "type": "WatchEvent",
    "actor": {
      "id": 875324,
      "login": "dmjio",
      "display_login": "dmjio",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmjio",
      "avatar_url": "https://avatars.githubusercontent.com/u/875324?"
    },
    "repo": {
      "id": 189534510,
      "name": "jwiegley/hello-rust",
      "url": "https://api.github.com/repos/jwiegley/hello-rust"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-31T05:45:39Z"
  },
  {
    "id": "9732154709",
    "type": "CreateEvent",
    "actor": {
      "id": 8460,
      "login": "jwiegley",
      "display_login": "jwiegley",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jwiegley",
      "avatar_url": "https://avatars.githubusercontent.com/u/8460?"
    },
    "repo": {
      "id": 189534510,
      "name": "jwiegley/hello-rust",
      "url": "https://api.github.com/repos/jwiegley/hello-rust"
    },
    "payload": {
      "ref": null,
      "ref_type": "repository",
      "master_branch": "master",
      "description": "A simple hello world in Rust, with a Nix environment",
      "pusher_type": "user"
    },
    "public": true,
    "created_at": "2019-05-31T05:43:39Z"
  },
  {
    "id": "9731854091",
    "type": "IssuesEvent",
    "actor": {
      "id": 11237600,
      "login": "scolsen",
      "display_login": "scolsen",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scolsen",
      "avatar_url": "https://avatars.githubusercontent.com/u/11237600?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/480",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/480/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/480/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/480/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/480",
        "id": 450606090,
        "node_id": "MDU6SXNzdWU0NTA2MDYwOTA=",
        "number": 480,
        "title": "Array: Clarify `remove` semantics?",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-31T04:09:24Z",
        "updated_at": "2019-05-31T04:09:24Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "(Sorry to generate so many issues (of varying legitimacy) lately, been putting the language through some paces!) \r\n\r\nIt's quite possible I'm just misunderstanding how binding works, so this may be a non-issue, please let me know!\r\n\r\nCurrently, `Array.remove` removes elements from an array 'in-place' and returns the resulting array. While there's nothing wrong with this behavior, it does result in some scenarios in which the semantics are a bit muddled. Consider the following example:\r\n\r\n```clojure\r\n(def my-array (the (Array Int) (zero)) ;; initialize an array and bind it to my-array\r\n\r\n(defn print-and-remove [] \r\n  (foreach [item my-array] \r\n    (do (IO.print item)\r\n           (remove item @&my-array))))\r\n```\r\n\r\nAt a glance, this seems to make intuitive sense: for each item in the array, print it, then remove it from the array, in place. I'd expect both functions in this case to be effectful types returning `()`. It is odd that we need to copy the bound array to manipulate it in place (on this point, I might be doing something wrong). \r\n\r\nIf you try to define this, you'll get an error: \r\n\r\n```\r\nI can’t match the types `(Array r17)` and `()` within `(do (let [item  ...  1)))`.\r\n\r\n  (let [item (Array.nth xs i)] (do (IO.print item) (Array.remove item (copy (ref my-array))))) : (Array r17)\r\n  At line 132, column 15 in '/Users/scottolsen/dev/Carp/core/Macros.carp'\r\n\r\n  Statement in do-expression : ()\r\n  At line 131, column 9 in '/Users/scottolsen/dev/Carp/core/Macros.carp'\r\n```\r\n\r\nThis is only problematic when iterating over the array with foreach--if we change the types to match, this works fine:\r\n\r\n```clojure\r\n(defn print-and-remove [] \r\n  (foreach [item my-array] \r\n    (do (IO.print item)\r\n           (set! my-array (remove item @&my-array)))))\r\n```\r\n\r\nBut `remove` removes elements in place... so it's redundant to call `set!` on `my-array`!\r\n...but also it's not, since we copied it to use it! (because that value was already owned by the binding). However, the initial reading of this code would suggest a redundancy and seems to conflict with my understanding of the term 'in-place'--I'd expect to not have to reset the value of a binding if the function operated on its value 'in-place'. But maybe this is a doc or personal issue? Maybe in-place is not the correct terminology here, or maybe I don't understand it properly?\r\n\r\nSince the majority of effectful operations in Carp return `()` I would expect an in-place operation to be treated as effectful, remove the elements from a referenced array and return `()`, while a `copy-filter` based implementation (`copy-remove`?) can return the resulting array.\r\n\r\nThat said, it looks as though `endo-filter` also returns the resulting array and takes ownership. I'll admit that I'm not entirely sure what taking ownership means when the value is bound to a variable as in the case above--is the variable unbound or reset upon the function's taking ownership--then it makes sense that we'd have to set again--but if we're copying anyway...does it make sense? Perhaps I'm wrongheaded on this one, but thought I'd bring it up in case it's a potential point of confusion for others too! This may just be one that warrants a quick remediation of my understanding and notions, then we can move merrily on. 😅 "
      }
    },
    "public": true,
    "created_at": "2019-05-31T04:09:25Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9728961266",
    "type": "CreateEvent",
    "actor": {
      "id": 8608160,
      "login": "Peltoche",
      "display_login": "Peltoche",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Peltoche",
      "avatar_url": "https://avatars.githubusercontent.com/u/8608160?"
    },
    "repo": {
      "id": 189457529,
      "name": "doc11-io/app",
      "url": "https://api.github.com/repos/doc11-io/app"
    },
    "payload": {
      "ref": null,
      "ref_type": "repository",
      "master_branch": "master",
      "description": null,
      "pusher_type": "user"
    },
    "public": true,
    "created_at": "2019-05-30T17:46:04Z",
    "org": {
      "id": 51121306,
      "login": "doc11-io",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/doc11-io",
      "avatar_url": "https://avatars.githubusercontent.com/u/51121306?"
    }
  },
  {
    "id": "9727326695",
    "type": "WatchEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 75774176,
      "name": "monome/norns",
      "url": "https://api.github.com/repos/monome/norns"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-30T13:56:05Z",
    "org": {
      "id": 318048,
      "login": "monome",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/monome",
      "avatar_url": "https://avatars.githubusercontent.com/u/318048?"
    }
  },
  {
    "id": "9725811048",
    "type": "WatchEvent",
    "actor": {
      "id": 316049,
      "login": "travisbrown",
      "display_login": "travisbrown",
      "gravatar_id": "",
      "url": "https://api.github.com/users/travisbrown",
      "avatar_url": "https://avatars.githubusercontent.com/u/316049?"
    },
    "repo": {
      "id": 134543031,
      "name": "zalando-nakadi/kanadi",
      "url": "https://api.github.com/repos/zalando-nakadi/kanadi"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-30T09:43:55Z",
    "org": {
      "id": 29952655,
      "login": "zalando-nakadi",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/zalando-nakadi",
      "avatar_url": "https://avatars.githubusercontent.com/u/29952655?"
    }
  },
  {
    "id": "9725769429",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/464",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/464",
        "id": 449613236,
        "node_id": "MDU6SXNzdWU0NDk2MTMyMzY=",
        "number": 464,
        "title": "Non-exhaustive patterns in Concretize",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 309730549,
            "node_id": "MDU6TGFiZWwzMDk3MzA1NDk=",
            "url": "https://api.github.com/repos/carp-lang/Carp/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true
          },
          {
            "id": 309730552,
            "node_id": "MDU6TGFiZWwzMDk3MzA1NTI=",
            "url": "https://api.github.com/repos/carp-lang/Carp/labels/help%20wanted",
            "name": "help wanted",
            "color": "159818",
            "default": true
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/carp-lang/Carp/milestones/1",
          "html_url": "https://github.com/carp-lang/Carp/milestone/1",
          "labels_url": "https://api.github.com/repos/carp-lang/Carp/milestones/1/labels",
          "id": 4282210,
          "node_id": "MDk6TWlsZXN0b25lNDI4MjIxMA==",
          "number": 1,
          "title": "Version 0.3.0",
          "description": "So, it's definitely about time to release an official version of Carp. We need to discuss exactly what goes in it, but it should provide a nice and usable experience. Polishing what we have is more important than tons of new features.",
          "creator": {
            "login": "eriksvedang",
            "id": 356121,
            "node_id": "MDQ6VXNlcjM1NjEyMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eriksvedang",
            "html_url": "https://github.com/eriksvedang",
            "followers_url": "https://api.github.com/users/eriksvedang/followers",
            "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
            "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
            "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
            "repos_url": "https://api.github.com/users/eriksvedang/repos",
            "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 15,
          "closed_issues": 6,
          "state": "open",
          "created_at": "2019-05-03T10:18:33Z",
          "updated_at": "2019-05-30T08:20:14Z",
          "due_on": "2019-07-01T07:00:00Z",
          "closed_at": null
        },
        "comments": 4,
        "created_at": "2019-05-29T06:01:57Z",
        "updated_at": "2019-05-30T09:37:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "When I attempt to use the following definitions, I get an error about non-exhaustive patterns in `concretize.hs`\r\n\r\n```clojure\r\n(def scheduled-propagators (the (Array (Fn [] ())) (zero)))                 \r\n    ;; all propagators ever scheduled during the scheduler's lifetime.          \r\n(def history (the (Array (Fn [] ())) (zero)))  \r\n\r\n(defn run-alerted []                                                        \r\n        (do                                                                     \r\n          (clear-schedule)                                                      \r\n          (foreach [propagator &scheduled-propagators]                          \r\n            (~propagator))                                                      \r\n          (if (propagators-scheduled?)                                          \r\n              (run-alerted)                                                     \r\n              (State.Done))))    \r\n```\r\n\r\nMy guess is that concretize doesn't yet account for the `()` type? either that or there's something wrong in my carp code. \r\n\r\nHappy to look into this!"
      },
      "comment": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/comments/497269693",
        "html_url": "https://github.com/carp-lang/Carp/issues/464#issuecomment-497269693",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/464",
        "id": 497269693,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzI2OTY5Mw==",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2019-05-30T09:37:02Z",
        "updated_at": "2019-05-30T09:37:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "We should definitely check type definitions more thoroughly before handing them off. I can do that on the weekend maybe."
      }
    },
    "public": true,
    "created_at": "2019-05-30T09:37:02Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9725302785",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 356121,
      "login": "eriksvedang",
      "display_login": "eriksvedang",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eriksvedang",
      "avatar_url": "https://avatars.githubusercontent.com/u/356121?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/437",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/437/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/437/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/437/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/437",
        "id": 442595326,
        "node_id": "MDU6SXNzdWU0NDI1OTUzMjY=",
        "number": 437,
        "title": "Entering `help` into the repl crashes it",
        "user": {
          "login": "eriksvedang",
          "id": 356121,
          "node_id": "MDQ6VXNlcjM1NjEyMQ==",
          "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eriksvedang",
          "html_url": "https://github.com/eriksvedang",
          "followers_url": "https://api.github.com/users/eriksvedang/followers",
          "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
          "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
          "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
          "repos_url": "https://api.github.com/users/eriksvedang/repos",
          "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "eriksvedang",
          "id": 356121,
          "node_id": "MDQ6VXNlcjM1NjEyMQ==",
          "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eriksvedang",
          "html_url": "https://github.com/eriksvedang",
          "followers_url": "https://api.github.com/users/eriksvedang/followers",
          "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
          "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
          "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
          "repos_url": "https://api.github.com/users/eriksvedang/repos",
          "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "eriksvedang",
            "id": 356121,
            "node_id": "MDQ6VXNlcjM1NjEyMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eriksvedang",
            "html_url": "https://github.com/eriksvedang",
            "followers_url": "https://api.github.com/users/eriksvedang/followers",
            "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
            "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
            "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
            "repos_url": "https://api.github.com/users/eriksvedang/repos",
            "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": {
          "url": "https://api.github.com/repos/carp-lang/Carp/milestones/1",
          "html_url": "https://github.com/carp-lang/Carp/milestone/1",
          "labels_url": "https://api.github.com/repos/carp-lang/Carp/milestones/1/labels",
          "id": 4282210,
          "node_id": "MDk6TWlsZXN0b25lNDI4MjIxMA==",
          "number": 1,
          "title": "Version 0.3.0",
          "description": "So, it's definitely about time to release an official version of Carp. We need to discuss exactly what goes in it, but it should provide a nice and usable experience. Polishing what we have is more important than tons of new features.",
          "creator": {
            "login": "eriksvedang",
            "id": 356121,
            "node_id": "MDQ6VXNlcjM1NjEyMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eriksvedang",
            "html_url": "https://github.com/eriksvedang",
            "followers_url": "https://api.github.com/users/eriksvedang/followers",
            "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
            "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
            "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
            "repos_url": "https://api.github.com/users/eriksvedang/repos",
            "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 14,
          "closed_issues": 6,
          "state": "open",
          "created_at": "2019-05-03T10:18:33Z",
          "updated_at": "2019-05-30T07:42:27Z",
          "due_on": "2019-07-01T07:00:00Z",
          "closed_at": null
        },
        "comments": 7,
        "created_at": "2019-05-10T08:17:41Z",
        "updated_at": "2019-05-30T08:19:00Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "body": ""
      },
      "comment": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/comments/497247555",
        "html_url": "https://github.com/carp-lang/Carp/issues/437#issuecomment-497247555",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/437",
        "id": 497247555,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzI0NzU1NQ==",
        "user": {
          "login": "eriksvedang",
          "id": 356121,
          "node_id": "MDQ6VXNlcjM1NjEyMQ==",
          "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eriksvedang",
          "html_url": "https://github.com/eriksvedang",
          "followers_url": "https://api.github.com/users/eriksvedang/followers",
          "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
          "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
          "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
          "repos_url": "https://api.github.com/users/eriksvedang/repos",
          "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2019-05-30T08:19:00Z",
        "updated_at": "2019-05-30T08:19:00Z",
        "author_association": "COLLABORATOR",
        "body": "No, I fixed the crash but there isn't a helpful message anymore. "
      }
    },
    "public": true,
    "created_at": "2019-05-30T08:19:00Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9725128131",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 356121,
      "login": "eriksvedang",
      "display_login": "eriksvedang",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eriksvedang",
      "avatar_url": "https://avatars.githubusercontent.com/u/356121?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/479",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/479/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/479/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/479/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/479",
        "id": 450126582,
        "node_id": "MDU6SXNzdWU0NTAxMjY1ODI=",
        "number": 479,
        "title": "Make it easier to use functions as type members in the repl?",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 309730549,
            "node_id": "MDU6TGFiZWwzMDk3MzA1NDk=",
            "url": "https://api.github.com/repos/carp-lang/Carp/labels/bug",
            "name": "bug",
            "color": "fc2929",
            "default": true
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
          "url": "https://api.github.com/repos/carp-lang/Carp/milestones/1",
          "html_url": "https://github.com/carp-lang/Carp/milestone/1",
          "labels_url": "https://api.github.com/repos/carp-lang/Carp/milestones/1/labels",
          "id": 4282210,
          "node_id": "MDk6TWlsZXN0b25lNDI4MjIxMA==",
          "number": 1,
          "title": "Version 0.3.0",
          "description": "So, it's definitely about time to release an official version of Carp. We need to discuss exactly what goes in it, but it should provide a nice and usable experience. Polishing what we have is more important than tons of new features.",
          "creator": {
            "login": "eriksvedang",
            "id": 356121,
            "node_id": "MDQ6VXNlcjM1NjEyMQ==",
            "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eriksvedang",
            "html_url": "https://github.com/eriksvedang",
            "followers_url": "https://api.github.com/users/eriksvedang/followers",
            "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
            "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
            "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
            "repos_url": "https://api.github.com/users/eriksvedang/repos",
            "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
            "type": "User",
            "site_admin": false
          },
          "open_issues": 14,
          "closed_issues": 6,
          "state": "open",
          "created_at": "2019-05-03T10:18:33Z",
          "updated_at": "2019-05-30T07:42:27Z",
          "due_on": "2019-07-01T07:00:00Z",
          "closed_at": null
        },
        "comments": 1,
        "created_at": "2019-05-30T04:38:38Z",
        "updated_at": "2019-05-30T07:47:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Currently, it seems that the repl has trouble when dealing with anonymous function as a type members unless the result is bound:\r\n\r\n```clojure\r\n(deftype EG (Foo [String (Fn [] ())]) (Bar []))\r\n(EG.Foo @\"foo\" (fn [] ()))\r\n./out/main.c:368:17: error: expected ')'\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                ^\r\n./out/main.c:368:14: note: to match this '('\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n             ^\r\n./out/main.c:368:62: error: expected function body after function declarator\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                                                             ^\r\n./out/main.c:371:17: error: expected ')'\r\nvoid _Lambda_(EG.Foo (copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                ^\r\n./out/main.c:371:14: note: to match this '('\r\nvoid _Lambda_(EG.Foo (copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n             ^\r\n./out/main.c:371:55: error: expected function body after function declarator\r\nvoid _Lambda_(EG.Foo (copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                                                      ^\r\n./out/main.c:1659:24: warning: implicit declaration of function 'Function_copy__void_Fn___void' is invalid in C99 [-Wimplicit-function-declaration]\r\n    copy.Foo.member1 = Function_copy__void_Fn___void(&(pRef->Foo.member1));\r\n                       ^\r\n./out/main.c:1659:22: error: assigning to 'Lambda' from incompatible type 'int'\r\n    copy.Foo.member1 = Function_copy__void_Fn___void(&(pRef->Foo.member1));\r\n                     ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1692:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n         ^\r\n./out/main.c:1692:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1714:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n         ^\r\n./out/main.c:1714:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1746:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n         ^\r\n./out/main.c:1746:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1768:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n         ^\r\n./out/main.c:1768:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:2932:17: error: expected ')'\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7() {\r\n                ^\r\n./out/main.c:2932:14: note: to match this '('\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7() {\r\n             ^\r\n./out/main.c:2932:62: error: expected function body after function declarator\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7() {\r\n```\r\n\r\nWhen using a def, this works fine.\r\n\r\n```clojure\r\n(deftype EG (Foo [String (Fn [] ())]) (Bar []))\r\n(def quack (EG.Foo @\"foo\" (fn [] ())))\r\n(type quack)\r\nquack : EG\r\n```\r\n\r\nSome users (such as myself) may occasionally want to use the repl to simply evaluate an expression to check that it's valid. It might help if we can make the repl bind to a global dummy/catchall variable whenever a user enters something like `(EG.Foo @\"foo\" (fn [] ()))` at the top level. For example, SML implementations often use a global called `it` for this sort of thing; `it` is always bound to the last evaluated expression.\r\n\r\nThis need to `def` can also make it tricky to work with evaluating functions that use these definitions:\r\n```clojure\r\n(deftype EG (Foo [(Fn [] ())]) (Bar []))\r\n(defn g [x] (match x (EG.Foo f) (f) (EG.Bar) ()))\r\n(def q (EG.Foo (fn [] ())))\r\n(g @&q) ;; Broken!\r\n/out/main.c:1833:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n         ^\r\n./out/main.c:1833:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n;;;;; etc....\r\n\r\n(def r (g @&q)) ;; works just fine!\r\n(type r)\r\nr : () ;; unit, the result we expect from computing g of q.\r\n```\r\n\r\n(As part of this exercise, I also had some fun with pointers.)\r\n```clojure\r\n(defn qux [] (IO.println \"foo\"))\r\n(Pointer.to-ref (address qux))\r\nλ\r\n(def x (Pointer.to-ref (address qux)))\r\n(type x)\r\nx : (Ref (λ [] ()))\r\n[x]\r\n=> [(def x (Pointer.to-ref__Fn___void (address qux)))]\r\n@x\r\nλ\r\n(@x)\r\nλ\r\nfoo\r\n(~x)\r\nfoo\r\n```"
      },
      "comment": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/comments/497239083",
        "html_url": "https://github.com/carp-lang/Carp/issues/479#issuecomment-497239083",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/479",
        "id": 497239083,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzIzOTA4Mw==",
        "user": {
          "login": "eriksvedang",
          "id": 356121,
          "node_id": "MDQ6VXNlcjM1NjEyMQ==",
          "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eriksvedang",
          "html_url": "https://github.com/eriksvedang",
          "followers_url": "https://api.github.com/users/eriksvedang/followers",
          "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
          "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
          "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
          "repos_url": "https://api.github.com/users/eriksvedang/repos",
          "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2019-05-30T07:47:06Z",
        "updated_at": "2019-05-30T07:47:06Z",
        "author_association": "COLLABORATOR",
        "body": "Huh, I don't get the same C compiler errors as you. Both in the repl and when loading from a file I get a bunch of warnings regarding and implicit declaration of `Function_copy__void_Fn___void` plus an error:\r\n\r\n```\r\n/Carp/out/main.c:1635:22: error: assigning to 'Lambda' from incompatible type 'int'\r\n    copy.Foo.member1 = Function_copy__void_Fn___void(&(pRef->Foo.member1));\r\n```\r\n\r\nThis probably means that there is a dependency function that is not generated...\r\n\r\nI've solved a bunch of similar bugs in Concretize/Emit before, so I'm happy to fix this unless you want to take it on?"
      }
    },
    "public": true,
    "created_at": "2019-05-30T07:47:08Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9724342184",
    "type": "IssuesEvent",
    "actor": {
      "id": 11237600,
      "login": "scolsen",
      "display_login": "scolsen",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scolsen",
      "avatar_url": "https://avatars.githubusercontent.com/u/11237600?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/479",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/479/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/479/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/479/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/479",
        "id": 450126582,
        "node_id": "MDU6SXNzdWU0NTAxMjY1ODI=",
        "number": 479,
        "title": "Make it easier to use functions as type members in the repl?",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-30T04:38:38Z",
        "updated_at": "2019-05-30T04:38:38Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Currently, it seems that the repl has trouble when dealing with anonymous function as a type members unless the result is bound:\r\n\r\n```clojure\r\n(deftype EG (Foo [String (Fn [] ())]) (Bar []))\r\n(EG.Foo @\"foo\" (fn [] ()))\r\n./out/main.c:368:17: error: expected ')'\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                ^\r\n./out/main.c:368:14: note: to match this '('\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n             ^\r\n./out/main.c:368:62: error: expected function body after function declarator\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                                                             ^\r\n./out/main.c:371:17: error: expected ')'\r\nvoid _Lambda_(EG.Foo (copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                ^\r\n./out/main.c:371:14: note: to match this '('\r\nvoid _Lambda_(EG.Foo (copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n             ^\r\n./out/main.c:371:55: error: expected function body after function declarator\r\nvoid _Lambda_(EG.Foo (copy \"Foo\") (fn _LT__GT_ [] ()))_7();\r\n                                                      ^\r\n./out/main.c:1659:24: warning: implicit declaration of function 'Function_copy__void_Fn___void' is invalid in C99 [-Wimplicit-function-declaration]\r\n    copy.Foo.member1 = Function_copy__void_Fn___void(&(pRef->Foo.member1));\r\n                       ^\r\n./out/main.c:1659:22: error: assigning to 'Lambda' from incompatible type 'int'\r\n    copy.Foo.member1 = Function_copy__void_Fn___void(&(pRef->Foo.member1));\r\n                     ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1692:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n         ^\r\n./out/main.c:1692:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1714:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n         ^\r\n./out/main.c:1714:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1746:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n         ^\r\n./out/main.c:1746:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:1768:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n         ^\r\n./out/main.c:1768:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1);\r\n       ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./out/main.c:2932:17: error: expected ')'\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7() {\r\n                ^\r\n./out/main.c:2932:14: note: to match this '('\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7() {\r\n             ^\r\n./out/main.c:2932:62: error: expected function body after function declarator\r\nvoid _Lambda_(EG.Foo (String.copy \"Foo\") (fn _LT__GT_ [] ()))_7() {\r\n```\r\n\r\nWhen using a def, this works fine.\r\n\r\n```clojure\r\n(deftype EG (Foo [String (Fn [] ())]) (Bar []))\r\n(def quack (EG.Foo @\"foo\" (fn [] ())))\r\n(type quack)\r\nquack : EG\r\n```\r\n\r\nSome users (such as myself) may occasionally want to use the repl to simply evaluate an expression to check that it's valid. It might help if we can make the repl bind to a global dummy/catchall variable whenever a user enters something like `(EG.Foo @\"foo\" (fn [] ()))` at the top level. For example, SML implementations often use a global called `it` for this sort of thing; `it` is always bound to the last evaluated expression.\r\n\r\nThis need to `def` can also make it tricky to work with evaluating functions that use these definitions:\r\n```clojure\r\n(deftype EG (Foo [(Fn [] ())]) (Bar []))\r\n(defn g [x] (match x (EG.Foo f) (f) (EG.Bar) ()))\r\n(def q (EG.Foo (fn [] ())))\r\n(g @&q) ;; Broken!\r\n/out/main.c:1833:10: warning: implicit declaration of function 'Function_prn__void' is invalid in C99 [-Wimplicit-function-declaration]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n         ^\r\n./out/main.c:1833:8: warning: incompatible integer to pointer conversion assigning to 'String' (aka 'char *') from 'int' [-Wint-conversion]\r\n  temp = Function_prn__void(&p->Foo.member1); \r\n;;;;; etc....\r\n\r\n(def r (g @&q)) ;; works just fine!\r\n(type r)\r\nr : () ;; unit, the result we expect from computing g of q.\r\n```\r\n\r\n(As part of this exercise, I also had some fun with pointers.)\r\n```clojure\r\n(defn qux [] (IO.println \"foo\"))\r\n(Pointer.to-ref (address qux))\r\nλ\r\n(def x (Pointer.to-ref (address qux)))\r\n(type x)\r\nx : (Ref (λ [] ()))\r\n[x]\r\n=> [(def x (Pointer.to-ref__Fn___void (address qux)))]\r\n@x\r\nλ\r\n(@x)\r\nλ\r\nfoo\r\n(~x)\r\nfoo\r\n```"
      }
    },
    "public": true,
    "created_at": "2019-05-30T04:38:38Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9723870928",
    "type": "WatchEvent",
    "actor": {
      "id": 875324,
      "login": "dmjio",
      "display_login": "dmjio",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmjio",
      "avatar_url": "https://avatars.githubusercontent.com/u/875324?"
    },
    "repo": {
      "id": 100891746,
      "name": "onmyway133/PushNotifications",
      "url": "https://api.github.com/repos/onmyway133/PushNotifications"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-30T02:19:15Z"
  },
  {
    "id": "9723211163",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 11237600,
      "login": "scolsen",
      "display_login": "scolsen",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scolsen",
      "avatar_url": "https://avatars.githubusercontent.com/u/11237600?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/464",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/464",
        "id": 449613236,
        "node_id": "MDU6SXNzdWU0NDk2MTMyMzY=",
        "number": 464,
        "title": "Non-exhaustive patterns in Concretize",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-05-29T06:01:57Z",
        "updated_at": "2019-05-29T23:12:39Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "When I attempt to use the following definitions, I get an error about non-exhaustive patterns in `concretize.hs`\r\n\r\n```clojure\r\n(def scheduled-propagators (the (Array (Fn [] ())) (zero)))                 \r\n    ;; all propagators ever scheduled during the scheduler's lifetime.          \r\n(def history (the (Array (Fn [] ())) (zero)))  \r\n\r\n(defn run-alerted []                                                        \r\n        (do                                                                     \r\n          (clear-schedule)                                                      \r\n          (foreach [propagator &scheduled-propagators]                          \r\n            (~propagator))                                                      \r\n          (if (propagators-scheduled?)                                          \r\n              (run-alerted)                                                     \r\n              (State.Done))))    \r\n```\r\n\r\nMy guess is that concretize doesn't yet account for the `()` type? either that or there's something wrong in my carp code. \r\n\r\nHappy to look into this!"
      },
      "comment": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/comments/497141483",
        "html_url": "https://github.com/carp-lang/Carp/issues/464#issuecomment-497141483",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/464",
        "id": 497141483,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzE0MTQ4Mw==",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2019-05-29T23:12:39Z",
        "updated_at": "2019-05-29T23:12:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "So, here was my dumb error:\r\n\r\n`(deftype (State a) Done (Value [a]))`\r\n\r\nThe repl/compiler treats this definition as a-ok, but will choke in a variety of ways when you attempt to use the first form as: `State.Done`.\r\n\r\nIt seems as though the particular Concretize error I encountered relies on a couple of conditions...so I'm still working on reproducing precisely that issue, but it does seem as though the root cause is the above definition of the `State` sumtype being accepted. It seems as though the concretize error is encountered if you use the invalid type definition in a particular way. I have dug into reproducing it yet, but here is the function it was hung up on (when State is defined incorrectly as I defined it above)\r\n\r\n```clojure\r\n    (private run-alerted)                                                                                                                               \r\n    (doc run-alerted \"Run all of the alterted propagators.\")                                                                                            \r\n    (sig run-alerted (Fn [] (State a)))                                                                                                                 \r\n    (defn run-alerted []                                                                                                                                \r\n        (do                                                                                                                                             \r\n          (clear-schedule)                                                                                                                              \r\n          (foreach [propagator &scheduled-propagators]                                                                                                  \r\n            (~propagator))                                                                                                                              \r\n          (if (propagators-scheduled?)                                                                                                                  \r\n              (run-alerted)                                                                                                                             \r\n              (State.Done))))        \r\n```\r\n\r\nIf I had to guess it probably has something to do with the fact that [a] is not bound using `the` nor is it contextualized by a function argument.\r\n\r\nThe definition of `State` above should probably emit the `Sumtype` error like this def does:\r\n\r\n```\r\n(deftype Foo Nada)\r\nInvalid type definition for 'Foo':\r\n\r\nI failed to read `Nada` as a sumtype case at line 1, column 14 in 'REPL'.\r\n\r\nSumtype cases look like this: `(Foo [Int typevar])`\r\n```"
      }
    },
    "public": true,
    "created_at": "2019-05-29T23:12:39Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9722834294",
    "type": "WatchEvent",
    "actor": {
      "id": 8165792,
      "login": "mrkkrp",
      "display_login": "mrkkrp",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrkkrp",
      "avatar_url": "https://avatars.githubusercontent.com/u/8165792?"
    },
    "repo": {
      "id": 922251,
      "name": "bbatsov/zenburn-emacs",
      "url": "https://api.github.com/repos/bbatsov/zenburn-emacs"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-29T21:48:02Z"
  },
  {
    "id": "9721705664",
    "type": "PushEvent",
    "actor": {
      "id": 356121,
      "login": "eriksvedang",
      "display_login": "eriksvedang",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eriksvedang",
      "avatar_url": "https://avatars.githubusercontent.com/u/356121?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "push_id": 3660429872,
      "size": 2,
      "distinct_size": 2,
      "ref": "refs/heads/master",
      "head": "714aeab80caf59a8332199b67b172d32258dd834",
      "before": "e575a6aed65270e4975fe4618b129df41be4519b",
      "commits": [
        {
          "sha": "f823618002884d5b8fea4ada227221c0b41e246e",
          "author": {
            "email": "veit@veitheller.de",
            "name": "hellerve"
          },
          "message": "headerparse: fix for comments after decl",
          "distinct": true,
          "url": "https://api.github.com/repos/carp-lang/Carp/commits/f823618002884d5b8fea4ada227221c0b41e246e"
        },
        {
          "sha": "714aeab80caf59a8332199b67b172d32258dd834",
          "author": {
            "email": "erik.svedang@gmail.com",
            "name": "Erik Svedäng"
          },
          "message": "Merge pull request #478 from hellerve/headerparse-comment-fix\n\nFix headerparse for comments after decl",
          "distinct": true,
          "url": "https://api.github.com/repos/carp-lang/Carp/commits/714aeab80caf59a8332199b67b172d32258dd834"
        }
      ]
    },
    "public": true,
    "created_at": "2019-05-29T18:44:33Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9721705539",
    "type": "PullRequestEvent",
    "actor": {
      "id": 356121,
      "login": "eriksvedang",
      "display_login": "eriksvedang",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eriksvedang",
      "avatar_url": "https://avatars.githubusercontent.com/u/356121?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "closed",
      "number": 478,
      "pull_request": {
        "url": "https://api.github.com/repos/carp-lang/Carp/pulls/478",
        "id": 283345444,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjgzMzQ1NDQ0",
        "html_url": "https://github.com/carp-lang/Carp/pull/478",
        "diff_url": "https://github.com/carp-lang/Carp/pull/478.diff",
        "patch_url": "https://github.com/carp-lang/Carp/pull/478.patch",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/478",
        "number": 478,
        "state": "closed",
        "locked": false,
        "title": "Fix headerparse for comments after decl",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "This PR fixes the headerparse to accept input such as:\r\n\r\n```c\r\nint x(); // this comment destroys headerparse\r\nvoid y();\r\n```\r\n\r\nInline comments made the header parser choke before because it expected the rest of the line to consist of `stringOrTab` parsemes.\r\n\r\nCheers",
        "created_at": "2019-05-29T16:42:51Z",
        "updated_at": "2019-05-29T18:44:31Z",
        "closed_at": "2019-05-29T18:44:31Z",
        "merged_at": "2019-05-29T18:44:31Z",
        "merge_commit_sha": "714aeab80caf59a8332199b67b172d32258dd834",
        "assignee": null,
        "assignees": [],
        "requested_reviewers": [],
        "requested_teams": [],
        "labels": [],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/carp-lang/Carp/pulls/478/commits",
        "review_comments_url": "https://api.github.com/repos/carp-lang/Carp/pulls/478/comments",
        "review_comment_url": "https://api.github.com/repos/carp-lang/Carp/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/478/comments",
        "statuses_url": "https://api.github.com/repos/carp-lang/Carp/statuses/f823618002884d5b8fea4ada227221c0b41e246e",
        "head": {
          "label": "hellerve:headerparse-comment-fix",
          "ref": "headerparse-comment-fix",
          "sha": "f823618002884d5b8fea4ada227221c0b41e246e",
          "user": {
            "login": "hellerve",
            "id": 7725188,
            "node_id": "MDQ6VXNlcjc3MjUxODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hellerve",
            "html_url": "https://github.com/hellerve",
            "followers_url": "https://api.github.com/users/hellerve/followers",
            "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
            "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
            "organizations_url": "https://api.github.com/users/hellerve/orgs",
            "repos_url": "https://api.github.com/users/hellerve/repos",
            "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hellerve/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 107543659,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDc1NDM2NTk=",
            "name": "Carp",
            "full_name": "hellerve/Carp",
            "private": false,
            "owner": {
              "login": "hellerve",
              "id": 7725188,
              "node_id": "MDQ6VXNlcjc3MjUxODg=",
              "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/hellerve",
              "html_url": "https://github.com/hellerve",
              "followers_url": "https://api.github.com/users/hellerve/followers",
              "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
              "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
              "organizations_url": "https://api.github.com/users/hellerve/orgs",
              "repos_url": "https://api.github.com/users/hellerve/repos",
              "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
              "received_events_url": "https://api.github.com/users/hellerve/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/hellerve/Carp",
            "description": "A statically typed lisp, without a GC, for high performance applications",
            "fork": true,
            "url": "https://api.github.com/repos/hellerve/Carp",
            "forks_url": "https://api.github.com/repos/hellerve/Carp/forks",
            "keys_url": "https://api.github.com/repos/hellerve/Carp/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/hellerve/Carp/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/hellerve/Carp/teams",
            "hooks_url": "https://api.github.com/repos/hellerve/Carp/hooks",
            "issue_events_url": "https://api.github.com/repos/hellerve/Carp/issues/events{/number}",
            "events_url": "https://api.github.com/repos/hellerve/Carp/events",
            "assignees_url": "https://api.github.com/repos/hellerve/Carp/assignees{/user}",
            "branches_url": "https://api.github.com/repos/hellerve/Carp/branches{/branch}",
            "tags_url": "https://api.github.com/repos/hellerve/Carp/tags",
            "blobs_url": "https://api.github.com/repos/hellerve/Carp/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/hellerve/Carp/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/hellerve/Carp/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/hellerve/Carp/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/hellerve/Carp/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/hellerve/Carp/languages",
            "stargazers_url": "https://api.github.com/repos/hellerve/Carp/stargazers",
            "contributors_url": "https://api.github.com/repos/hellerve/Carp/contributors",
            "subscribers_url": "https://api.github.com/repos/hellerve/Carp/subscribers",
            "subscription_url": "https://api.github.com/repos/hellerve/Carp/subscription",
            "commits_url": "https://api.github.com/repos/hellerve/Carp/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/hellerve/Carp/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/hellerve/Carp/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/hellerve/Carp/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/hellerve/Carp/contents/{+path}",
            "compare_url": "https://api.github.com/repos/hellerve/Carp/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/hellerve/Carp/merges",
            "archive_url": "https://api.github.com/repos/hellerve/Carp/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/hellerve/Carp/downloads",
            "issues_url": "https://api.github.com/repos/hellerve/Carp/issues{/number}",
            "pulls_url": "https://api.github.com/repos/hellerve/Carp/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/hellerve/Carp/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/hellerve/Carp/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/hellerve/Carp/labels{/name}",
            "releases_url": "https://api.github.com/repos/hellerve/Carp/releases{/id}",
            "deployments_url": "https://api.github.com/repos/hellerve/Carp/deployments",
            "created_at": "2017-10-19T12:32:47Z",
            "updated_at": "2019-05-27T15:40:17Z",
            "pushed_at": "2019-05-29T16:41:26Z",
            "git_url": "git://github.com/hellerve/Carp.git",
            "ssh_url": "git@github.com:hellerve/Carp.git",
            "clone_url": "https://github.com/hellerve/Carp.git",
            "svn_url": "https://github.com/hellerve/Carp",
            "homepage": "",
            "size": 7824,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": "Haskell",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 0,
            "license": {
              "key": "other",
              "name": "Other",
              "spdx_id": "NOASSERTION",
              "url": null,
              "node_id": "MDc6TGljZW5zZTA="
            },
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "carp-lang:master",
          "ref": "master",
          "sha": "e575a6aed65270e4975fe4618b129df41be4519b",
          "user": {
            "login": "carp-lang",
            "id": 20434801,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIwNDM0ODAx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/20434801?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carp-lang",
            "html_url": "https://github.com/carp-lang",
            "followers_url": "https://api.github.com/users/carp-lang/followers",
            "following_url": "https://api.github.com/users/carp-lang/following{/other_user}",
            "gists_url": "https://api.github.com/users/carp-lang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carp-lang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carp-lang/subscriptions",
            "organizations_url": "https://api.github.com/users/carp-lang/orgs",
            "repos_url": "https://api.github.com/users/carp-lang/repos",
            "events_url": "https://api.github.com/users/carp-lang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carp-lang/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 49426320,
            "node_id": "MDEwOlJlcG9zaXRvcnk0OTQyNjMyMA==",
            "name": "Carp",
            "full_name": "carp-lang/Carp",
            "private": false,
            "owner": {
              "login": "carp-lang",
              "id": 20434801,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjIwNDM0ODAx",
              "avatar_url": "https://avatars1.githubusercontent.com/u/20434801?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/carp-lang",
              "html_url": "https://github.com/carp-lang",
              "followers_url": "https://api.github.com/users/carp-lang/followers",
              "following_url": "https://api.github.com/users/carp-lang/following{/other_user}",
              "gists_url": "https://api.github.com/users/carp-lang/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/carp-lang/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/carp-lang/subscriptions",
              "organizations_url": "https://api.github.com/users/carp-lang/orgs",
              "repos_url": "https://api.github.com/users/carp-lang/repos",
              "events_url": "https://api.github.com/users/carp-lang/events{/privacy}",
              "received_events_url": "https://api.github.com/users/carp-lang/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/carp-lang/Carp",
            "description": "A statically typed lisp, without a GC, for real-time applications.",
            "fork": false,
            "url": "https://api.github.com/repos/carp-lang/Carp",
            "forks_url": "https://api.github.com/repos/carp-lang/Carp/forks",
            "keys_url": "https://api.github.com/repos/carp-lang/Carp/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/carp-lang/Carp/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/carp-lang/Carp/teams",
            "hooks_url": "https://api.github.com/repos/carp-lang/Carp/hooks",
            "issue_events_url": "https://api.github.com/repos/carp-lang/Carp/issues/events{/number}",
            "events_url": "https://api.github.com/repos/carp-lang/Carp/events",
            "assignees_url": "https://api.github.com/repos/carp-lang/Carp/assignees{/user}",
            "branches_url": "https://api.github.com/repos/carp-lang/Carp/branches{/branch}",
            "tags_url": "https://api.github.com/repos/carp-lang/Carp/tags",
            "blobs_url": "https://api.github.com/repos/carp-lang/Carp/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/carp-lang/Carp/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/carp-lang/Carp/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/carp-lang/Carp/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/carp-lang/Carp/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/carp-lang/Carp/languages",
            "stargazers_url": "https://api.github.com/repos/carp-lang/Carp/stargazers",
            "contributors_url": "https://api.github.com/repos/carp-lang/Carp/contributors",
            "subscribers_url": "https://api.github.com/repos/carp-lang/Carp/subscribers",
            "subscription_url": "https://api.github.com/repos/carp-lang/Carp/subscription",
            "commits_url": "https://api.github.com/repos/carp-lang/Carp/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/carp-lang/Carp/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/carp-lang/Carp/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/carp-lang/Carp/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/carp-lang/Carp/contents/{+path}",
            "compare_url": "https://api.github.com/repos/carp-lang/Carp/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/carp-lang/Carp/merges",
            "archive_url": "https://api.github.com/repos/carp-lang/Carp/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/carp-lang/Carp/downloads",
            "issues_url": "https://api.github.com/repos/carp-lang/Carp/issues{/number}",
            "pulls_url": "https://api.github.com/repos/carp-lang/Carp/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/carp-lang/Carp/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/carp-lang/Carp/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/carp-lang/Carp/labels{/name}",
            "releases_url": "https://api.github.com/repos/carp-lang/Carp/releases{/id}",
            "deployments_url": "https://api.github.com/repos/carp-lang/Carp/deployments",
            "created_at": "2016-01-11T12:54:09Z",
            "updated_at": "2019-05-29T11:22:04Z",
            "pushed_at": "2019-05-29T18:44:31Z",
            "git_url": "git://github.com/carp-lang/Carp.git",
            "ssh_url": "git@github.com:carp-lang/Carp.git",
            "clone_url": "https://github.com/carp-lang/Carp.git",
            "svn_url": "https://github.com/carp-lang/Carp",
            "homepage": "",
            "size": 7892,
            "stargazers_count": 2831,
            "watchers_count": 2831,
            "language": "Haskell",
            "has_issues": true,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": true,
            "forks_count": 102,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 42,
            "license": {
              "key": "other",
              "name": "Other",
              "spdx_id": "NOASSERTION",
              "url": null,
              "node_id": "MDc6TGljZW5zZTA="
            },
            "forks": 102,
            "open_issues": 42,
            "watchers": 2831,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/478"
          },
          "html": {
            "href": "https://github.com/carp-lang/Carp/pull/478"
          },
          "issue": {
            "href": "https://api.github.com/repos/carp-lang/Carp/issues/478"
          },
          "comments": {
            "href": "https://api.github.com/repos/carp-lang/Carp/issues/478/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/478/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/478/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/carp-lang/Carp/statuses/f823618002884d5b8fea4ada227221c0b41e246e"
          }
        },
        "author_association": "CONTRIBUTOR",
        "merged": true,
        "mergeable": null,
        "rebaseable": null,
        "mergeable_state": "unknown",
        "merged_by": {
          "login": "eriksvedang",
          "id": 356121,
          "node_id": "MDQ6VXNlcjM1NjEyMQ==",
          "avatar_url": "https://avatars3.githubusercontent.com/u/356121?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/eriksvedang",
          "html_url": "https://github.com/eriksvedang",
          "followers_url": "https://api.github.com/users/eriksvedang/followers",
          "following_url": "https://api.github.com/users/eriksvedang/following{/other_user}",
          "gists_url": "https://api.github.com/users/eriksvedang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/eriksvedang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/eriksvedang/subscriptions",
          "organizations_url": "https://api.github.com/users/eriksvedang/orgs",
          "repos_url": "https://api.github.com/users/eriksvedang/repos",
          "events_url": "https://api.github.com/users/eriksvedang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/eriksvedang/received_events",
          "type": "User",
          "site_admin": false
        },
        "comments": 0,
        "review_comments": 0,
        "maintainer_can_modify": false,
        "commits": 1,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1
      }
    },
    "public": true,
    "created_at": "2019-05-29T18:44:31Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9720888504",
    "type": "PullRequestEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "number": 478,
      "pull_request": {
        "url": "https://api.github.com/repos/carp-lang/Carp/pulls/478",
        "id": 283345444,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjgzMzQ1NDQ0",
        "html_url": "https://github.com/carp-lang/Carp/pull/478",
        "diff_url": "https://github.com/carp-lang/Carp/pull/478.diff",
        "patch_url": "https://github.com/carp-lang/Carp/pull/478.patch",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/478",
        "number": 478,
        "state": "open",
        "locked": false,
        "title": "Fix headerparse for comments after decl",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "This PR fixes the headerparse to accept input such as:\r\n\r\n```c\r\nint x(); // this comment destroys headerparse\r\nvoid y();\r\n```\r\n\r\nInline comments made the header parser choke before because it expected the rest of the line to consist of `stringOrTab` parsemes.\r\n\r\nCheers",
        "created_at": "2019-05-29T16:42:51Z",
        "updated_at": "2019-05-29T16:42:51Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": null,
        "assignee": null,
        "assignees": [],
        "requested_reviewers": [],
        "requested_teams": [],
        "labels": [],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/carp-lang/Carp/pulls/478/commits",
        "review_comments_url": "https://api.github.com/repos/carp-lang/Carp/pulls/478/comments",
        "review_comment_url": "https://api.github.com/repos/carp-lang/Carp/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/478/comments",
        "statuses_url": "https://api.github.com/repos/carp-lang/Carp/statuses/f823618002884d5b8fea4ada227221c0b41e246e",
        "head": {
          "label": "hellerve:headerparse-comment-fix",
          "ref": "headerparse-comment-fix",
          "sha": "f823618002884d5b8fea4ada227221c0b41e246e",
          "user": {
            "login": "hellerve",
            "id": 7725188,
            "node_id": "MDQ6VXNlcjc3MjUxODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hellerve",
            "html_url": "https://github.com/hellerve",
            "followers_url": "https://api.github.com/users/hellerve/followers",
            "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
            "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
            "organizations_url": "https://api.github.com/users/hellerve/orgs",
            "repos_url": "https://api.github.com/users/hellerve/repos",
            "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hellerve/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 107543659,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDc1NDM2NTk=",
            "name": "Carp",
            "full_name": "hellerve/Carp",
            "private": false,
            "owner": {
              "login": "hellerve",
              "id": 7725188,
              "node_id": "MDQ6VXNlcjc3MjUxODg=",
              "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/hellerve",
              "html_url": "https://github.com/hellerve",
              "followers_url": "https://api.github.com/users/hellerve/followers",
              "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
              "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
              "organizations_url": "https://api.github.com/users/hellerve/orgs",
              "repos_url": "https://api.github.com/users/hellerve/repos",
              "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
              "received_events_url": "https://api.github.com/users/hellerve/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/hellerve/Carp",
            "description": "A statically typed lisp, without a GC, for high performance applications",
            "fork": true,
            "url": "https://api.github.com/repos/hellerve/Carp",
            "forks_url": "https://api.github.com/repos/hellerve/Carp/forks",
            "keys_url": "https://api.github.com/repos/hellerve/Carp/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/hellerve/Carp/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/hellerve/Carp/teams",
            "hooks_url": "https://api.github.com/repos/hellerve/Carp/hooks",
            "issue_events_url": "https://api.github.com/repos/hellerve/Carp/issues/events{/number}",
            "events_url": "https://api.github.com/repos/hellerve/Carp/events",
            "assignees_url": "https://api.github.com/repos/hellerve/Carp/assignees{/user}",
            "branches_url": "https://api.github.com/repos/hellerve/Carp/branches{/branch}",
            "tags_url": "https://api.github.com/repos/hellerve/Carp/tags",
            "blobs_url": "https://api.github.com/repos/hellerve/Carp/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/hellerve/Carp/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/hellerve/Carp/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/hellerve/Carp/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/hellerve/Carp/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/hellerve/Carp/languages",
            "stargazers_url": "https://api.github.com/repos/hellerve/Carp/stargazers",
            "contributors_url": "https://api.github.com/repos/hellerve/Carp/contributors",
            "subscribers_url": "https://api.github.com/repos/hellerve/Carp/subscribers",
            "subscription_url": "https://api.github.com/repos/hellerve/Carp/subscription",
            "commits_url": "https://api.github.com/repos/hellerve/Carp/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/hellerve/Carp/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/hellerve/Carp/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/hellerve/Carp/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/hellerve/Carp/contents/{+path}",
            "compare_url": "https://api.github.com/repos/hellerve/Carp/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/hellerve/Carp/merges",
            "archive_url": "https://api.github.com/repos/hellerve/Carp/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/hellerve/Carp/downloads",
            "issues_url": "https://api.github.com/repos/hellerve/Carp/issues{/number}",
            "pulls_url": "https://api.github.com/repos/hellerve/Carp/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/hellerve/Carp/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/hellerve/Carp/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/hellerve/Carp/labels{/name}",
            "releases_url": "https://api.github.com/repos/hellerve/Carp/releases{/id}",
            "deployments_url": "https://api.github.com/repos/hellerve/Carp/deployments",
            "created_at": "2017-10-19T12:32:47Z",
            "updated_at": "2019-05-27T15:40:17Z",
            "pushed_at": "2019-05-29T16:41:26Z",
            "git_url": "git://github.com/hellerve/Carp.git",
            "ssh_url": "git@github.com:hellerve/Carp.git",
            "clone_url": "https://github.com/hellerve/Carp.git",
            "svn_url": "https://github.com/hellerve/Carp",
            "homepage": "",
            "size": 7824,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": "Haskell",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 0,
            "license": {
              "key": "other",
              "name": "Other",
              "spdx_id": "NOASSERTION",
              "url": null,
              "node_id": "MDc6TGljZW5zZTA="
            },
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "carp-lang:master",
          "ref": "master",
          "sha": "e575a6aed65270e4975fe4618b129df41be4519b",
          "user": {
            "login": "carp-lang",
            "id": 20434801,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIwNDM0ODAx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/20434801?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carp-lang",
            "html_url": "https://github.com/carp-lang",
            "followers_url": "https://api.github.com/users/carp-lang/followers",
            "following_url": "https://api.github.com/users/carp-lang/following{/other_user}",
            "gists_url": "https://api.github.com/users/carp-lang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carp-lang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carp-lang/subscriptions",
            "organizations_url": "https://api.github.com/users/carp-lang/orgs",
            "repos_url": "https://api.github.com/users/carp-lang/repos",
            "events_url": "https://api.github.com/users/carp-lang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carp-lang/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 49426320,
            "node_id": "MDEwOlJlcG9zaXRvcnk0OTQyNjMyMA==",
            "name": "Carp",
            "full_name": "carp-lang/Carp",
            "private": false,
            "owner": {
              "login": "carp-lang",
              "id": 20434801,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjIwNDM0ODAx",
              "avatar_url": "https://avatars1.githubusercontent.com/u/20434801?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/carp-lang",
              "html_url": "https://github.com/carp-lang",
              "followers_url": "https://api.github.com/users/carp-lang/followers",
              "following_url": "https://api.github.com/users/carp-lang/following{/other_user}",
              "gists_url": "https://api.github.com/users/carp-lang/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/carp-lang/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/carp-lang/subscriptions",
              "organizations_url": "https://api.github.com/users/carp-lang/orgs",
              "repos_url": "https://api.github.com/users/carp-lang/repos",
              "events_url": "https://api.github.com/users/carp-lang/events{/privacy}",
              "received_events_url": "https://api.github.com/users/carp-lang/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/carp-lang/Carp",
            "description": "A statically typed lisp, without a GC, for real-time applications.",
            "fork": false,
            "url": "https://api.github.com/repos/carp-lang/Carp",
            "forks_url": "https://api.github.com/repos/carp-lang/Carp/forks",
            "keys_url": "https://api.github.com/repos/carp-lang/Carp/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/carp-lang/Carp/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/carp-lang/Carp/teams",
            "hooks_url": "https://api.github.com/repos/carp-lang/Carp/hooks",
            "issue_events_url": "https://api.github.com/repos/carp-lang/Carp/issues/events{/number}",
            "events_url": "https://api.github.com/repos/carp-lang/Carp/events",
            "assignees_url": "https://api.github.com/repos/carp-lang/Carp/assignees{/user}",
            "branches_url": "https://api.github.com/repos/carp-lang/Carp/branches{/branch}",
            "tags_url": "https://api.github.com/repos/carp-lang/Carp/tags",
            "blobs_url": "https://api.github.com/repos/carp-lang/Carp/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/carp-lang/Carp/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/carp-lang/Carp/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/carp-lang/Carp/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/carp-lang/Carp/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/carp-lang/Carp/languages",
            "stargazers_url": "https://api.github.com/repos/carp-lang/Carp/stargazers",
            "contributors_url": "https://api.github.com/repos/carp-lang/Carp/contributors",
            "subscribers_url": "https://api.github.com/repos/carp-lang/Carp/subscribers",
            "subscription_url": "https://api.github.com/repos/carp-lang/Carp/subscription",
            "commits_url": "https://api.github.com/repos/carp-lang/Carp/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/carp-lang/Carp/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/carp-lang/Carp/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/carp-lang/Carp/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/carp-lang/Carp/contents/{+path}",
            "compare_url": "https://api.github.com/repos/carp-lang/Carp/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/carp-lang/Carp/merges",
            "archive_url": "https://api.github.com/repos/carp-lang/Carp/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/carp-lang/Carp/downloads",
            "issues_url": "https://api.github.com/repos/carp-lang/Carp/issues{/number}",
            "pulls_url": "https://api.github.com/repos/carp-lang/Carp/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/carp-lang/Carp/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/carp-lang/Carp/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/carp-lang/Carp/labels{/name}",
            "releases_url": "https://api.github.com/repos/carp-lang/Carp/releases{/id}",
            "deployments_url": "https://api.github.com/repos/carp-lang/Carp/deployments",
            "created_at": "2016-01-11T12:54:09Z",
            "updated_at": "2019-05-29T11:22:04Z",
            "pushed_at": "2019-05-29T07:47:48Z",
            "git_url": "git://github.com/carp-lang/Carp.git",
            "ssh_url": "git@github.com:carp-lang/Carp.git",
            "clone_url": "https://github.com/carp-lang/Carp.git",
            "svn_url": "https://github.com/carp-lang/Carp",
            "homepage": "",
            "size": 7892,
            "stargazers_count": 2831,
            "watchers_count": 2831,
            "language": "Haskell",
            "has_issues": true,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": true,
            "forks_count": 102,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 43,
            "license": {
              "key": "other",
              "name": "Other",
              "spdx_id": "NOASSERTION",
              "url": null,
              "node_id": "MDc6TGljZW5zZTA="
            },
            "forks": 102,
            "open_issues": 43,
            "watchers": 2831,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/478"
          },
          "html": {
            "href": "https://github.com/carp-lang/Carp/pull/478"
          },
          "issue": {
            "href": "https://api.github.com/repos/carp-lang/Carp/issues/478"
          },
          "comments": {
            "href": "https://api.github.com/repos/carp-lang/Carp/issues/478/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/478/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/478/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/carp-lang/Carp/statuses/f823618002884d5b8fea4ada227221c0b41e246e"
          }
        },
        "author_association": "CONTRIBUTOR",
        "merged": false,
        "mergeable": null,
        "rebaseable": null,
        "mergeable_state": "unknown",
        "merged_by": null,
        "comments": 0,
        "review_comments": 0,
        "maintainer_can_modify": true,
        "commits": 1,
        "additions": 1,
        "deletions": 1,
        "changed_files": 1
      }
    },
    "public": true,
    "created_at": "2019-05-29T16:42:52Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9720223020",
    "type": "WatchEvent",
    "actor": {
      "id": 8165792,
      "login": "mrkkrp",
      "display_login": "mrkkrp",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrkkrp",
      "avatar_url": "https://avatars.githubusercontent.com/u/8165792?"
    },
    "repo": {
      "id": 4279682,
      "name": "fish-shell/fish-shell",
      "url": "https://api.github.com/repos/fish-shell/fish-shell"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-29T15:18:14Z",
    "org": {
      "id": 1828073,
      "login": "fish-shell",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/fish-shell",
      "avatar_url": "https://avatars.githubusercontent.com/u/1828073?"
    }
  },
  {
    "id": "9719459225",
    "type": "WatchEvent",
    "actor": {
      "id": 8608160,
      "login": "Peltoche",
      "display_login": "Peltoche",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Peltoche",
      "avatar_url": "https://avatars.githubusercontent.com/u/8608160?"
    },
    "repo": {
      "id": 106082622,
      "name": "SourceLabOrg/kafka-webview",
      "url": "https://api.github.com/repos/SourceLabOrg/kafka-webview"
    },
    "payload": {
      "action": "started"
    },
    "public": true,
    "created_at": "2019-05-29T13:52:01Z",
    "org": {
      "id": 34590937,
      "login": "SourceLabOrg",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/SourceLabOrg",
      "avatar_url": "https://avatars.githubusercontent.com/u/34590937?"
    }
  },
  {
    "id": "9719432877",
    "type": "IssueCommentEvent",
    "actor": {
      "id": 11237600,
      "login": "scolsen",
      "display_login": "scolsen",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scolsen",
      "avatar_url": "https://avatars.githubusercontent.com/u/11237600?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "created",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/464",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/464/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/464",
        "id": 449613236,
        "node_id": "MDU6SXNzdWU0NDk2MTMyMzY=",
        "number": 464,
        "title": "Non-exhaustive patterns in Concretize",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-05-29T06:01:57Z",
        "updated_at": "2019-05-29T13:49:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "When I attempt to use the following definitions, I get an error about non-exhaustive patterns in `concretize.hs`\r\n\r\n```clojure\r\n(def scheduled-propagators (the (Array (Fn [] ())) (zero)))                 \r\n    ;; all propagators ever scheduled during the scheduler's lifetime.          \r\n(def history (the (Array (Fn [] ())) (zero)))  \r\n\r\n(defn run-alerted []                                                        \r\n        (do                                                                     \r\n          (clear-schedule)                                                      \r\n          (foreach [propagator &scheduled-propagators]                          \r\n            (~propagator))                                                      \r\n          (if (propagators-scheduled?)                                          \r\n              (run-alerted)                                                     \r\n              (State.Done))))    \r\n```\r\n\r\nMy guess is that concretize doesn't yet account for the `()` type? either that or there's something wrong in my carp code. \r\n\r\nHappy to look into this!"
      },
      "comment": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/comments/496944524",
        "html_url": "https://github.com/carp-lang/Carp/issues/464#issuecomment-496944524",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/464",
        "id": 496944524,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Njk0NDUyNA==",
        "user": {
          "login": "scolsen",
          "id": 11237600,
          "node_id": "MDQ6VXNlcjExMjM3NjAw",
          "avatar_url": "https://avatars0.githubusercontent.com/u/11237600?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/scolsen",
          "html_url": "https://github.com/scolsen",
          "followers_url": "https://api.github.com/users/scolsen/followers",
          "following_url": "https://api.github.com/users/scolsen/following{/other_user}",
          "gists_url": "https://api.github.com/users/scolsen/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/scolsen/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/scolsen/subscriptions",
          "organizations_url": "https://api.github.com/users/scolsen/orgs",
          "repos_url": "https://api.github.com/users/scolsen/repos",
          "events_url": "https://api.github.com/users/scolsen/events{/privacy}",
          "received_events_url": "https://api.github.com/users/scolsen/received_events",
          "type": "User",
          "site_admin": false
        },
        "created_at": "2019-05-29T13:49:02Z",
        "updated_at": "2019-05-29T13:49:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hm, that’s a hint that there’s probably just some logical error in my code that’s the root of this instance. Nonetheless, we should probably fix the non-exhaustive pattern and throw a meaningful error if we can. I’ll try to tease out the error and provide a small reproducible sample. "
      }
    },
    "public": true,
    "created_at": "2019-05-29T13:49:02Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9716818774",
    "type": "PullRequestEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "number": 477,
      "pull_request": {
        "url": "https://api.github.com/repos/carp-lang/Carp/pulls/477",
        "id": 283133706,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjgzMTMzNzA2",
        "html_url": "https://github.com/carp-lang/Carp/pull/477",
        "diff_url": "https://github.com/carp-lang/Carp/pull/477.diff",
        "patch_url": "https://github.com/carp-lang/Carp/pull/477.patch",
        "issue_url": "https://api.github.com/repos/carp-lang/Carp/issues/477",
        "number": 477,
        "state": "open",
        "locked": false,
        "title": "Remove issuified todos from Todo.org",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "body": "With the creation of #465 to #476, a bunch of issues found a new home and are moving out of the org file. This PR reflect that.\r\n\r\nCheers",
        "created_at": "2019-05-29T07:47:47Z",
        "updated_at": "2019-05-29T07:47:47Z",
        "closed_at": null,
        "merged_at": null,
        "merge_commit_sha": null,
        "assignee": null,
        "assignees": [],
        "requested_reviewers": [],
        "requested_teams": [],
        "labels": [],
        "milestone": null,
        "commits_url": "https://api.github.com/repos/carp-lang/Carp/pulls/477/commits",
        "review_comments_url": "https://api.github.com/repos/carp-lang/Carp/pulls/477/comments",
        "review_comment_url": "https://api.github.com/repos/carp-lang/Carp/pulls/comments{/number}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/477/comments",
        "statuses_url": "https://api.github.com/repos/carp-lang/Carp/statuses/beea7be351548c873670b745c33f595b2b397a2c",
        "head": {
          "label": "hellerve:cleanup-todo",
          "ref": "cleanup-todo",
          "sha": "beea7be351548c873670b745c33f595b2b397a2c",
          "user": {
            "login": "hellerve",
            "id": 7725188,
            "node_id": "MDQ6VXNlcjc3MjUxODg=",
            "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hellerve",
            "html_url": "https://github.com/hellerve",
            "followers_url": "https://api.github.com/users/hellerve/followers",
            "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
            "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
            "organizations_url": "https://api.github.com/users/hellerve/orgs",
            "repos_url": "https://api.github.com/users/hellerve/repos",
            "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hellerve/received_events",
            "type": "User",
            "site_admin": false
          },
          "repo": {
            "id": 107543659,
            "node_id": "MDEwOlJlcG9zaXRvcnkxMDc1NDM2NTk=",
            "name": "Carp",
            "full_name": "hellerve/Carp",
            "private": false,
            "owner": {
              "login": "hellerve",
              "id": 7725188,
              "node_id": "MDQ6VXNlcjc3MjUxODg=",
              "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/hellerve",
              "html_url": "https://github.com/hellerve",
              "followers_url": "https://api.github.com/users/hellerve/followers",
              "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
              "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
              "organizations_url": "https://api.github.com/users/hellerve/orgs",
              "repos_url": "https://api.github.com/users/hellerve/repos",
              "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
              "received_events_url": "https://api.github.com/users/hellerve/received_events",
              "type": "User",
              "site_admin": false
            },
            "html_url": "https://github.com/hellerve/Carp",
            "description": "A statically typed lisp, without a GC, for high performance applications",
            "fork": true,
            "url": "https://api.github.com/repos/hellerve/Carp",
            "forks_url": "https://api.github.com/repos/hellerve/Carp/forks",
            "keys_url": "https://api.github.com/repos/hellerve/Carp/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/hellerve/Carp/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/hellerve/Carp/teams",
            "hooks_url": "https://api.github.com/repos/hellerve/Carp/hooks",
            "issue_events_url": "https://api.github.com/repos/hellerve/Carp/issues/events{/number}",
            "events_url": "https://api.github.com/repos/hellerve/Carp/events",
            "assignees_url": "https://api.github.com/repos/hellerve/Carp/assignees{/user}",
            "branches_url": "https://api.github.com/repos/hellerve/Carp/branches{/branch}",
            "tags_url": "https://api.github.com/repos/hellerve/Carp/tags",
            "blobs_url": "https://api.github.com/repos/hellerve/Carp/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/hellerve/Carp/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/hellerve/Carp/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/hellerve/Carp/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/hellerve/Carp/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/hellerve/Carp/languages",
            "stargazers_url": "https://api.github.com/repos/hellerve/Carp/stargazers",
            "contributors_url": "https://api.github.com/repos/hellerve/Carp/contributors",
            "subscribers_url": "https://api.github.com/repos/hellerve/Carp/subscribers",
            "subscription_url": "https://api.github.com/repos/hellerve/Carp/subscription",
            "commits_url": "https://api.github.com/repos/hellerve/Carp/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/hellerve/Carp/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/hellerve/Carp/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/hellerve/Carp/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/hellerve/Carp/contents/{+path}",
            "compare_url": "https://api.github.com/repos/hellerve/Carp/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/hellerve/Carp/merges",
            "archive_url": "https://api.github.com/repos/hellerve/Carp/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/hellerve/Carp/downloads",
            "issues_url": "https://api.github.com/repos/hellerve/Carp/issues{/number}",
            "pulls_url": "https://api.github.com/repos/hellerve/Carp/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/hellerve/Carp/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/hellerve/Carp/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/hellerve/Carp/labels{/name}",
            "releases_url": "https://api.github.com/repos/hellerve/Carp/releases{/id}",
            "deployments_url": "https://api.github.com/repos/hellerve/Carp/deployments",
            "created_at": "2017-10-19T12:32:47Z",
            "updated_at": "2019-05-27T15:40:17Z",
            "pushed_at": "2019-05-29T07:46:37Z",
            "git_url": "git://github.com/hellerve/Carp.git",
            "ssh_url": "git@github.com:hellerve/Carp.git",
            "clone_url": "https://github.com/hellerve/Carp.git",
            "svn_url": "https://github.com/hellerve/Carp",
            "homepage": "",
            "size": 7819,
            "stargazers_count": 0,
            "watchers_count": 0,
            "language": "Haskell",
            "has_issues": false,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": false,
            "forks_count": 0,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 0,
            "license": {
              "key": "other",
              "name": "Other",
              "spdx_id": "NOASSERTION",
              "url": null,
              "node_id": "MDc6TGljZW5zZTA="
            },
            "forks": 0,
            "open_issues": 0,
            "watchers": 0,
            "default_branch": "master"
          }
        },
        "base": {
          "label": "carp-lang:master",
          "ref": "master",
          "sha": "e575a6aed65270e4975fe4618b129df41be4519b",
          "user": {
            "login": "carp-lang",
            "id": 20434801,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIwNDM0ODAx",
            "avatar_url": "https://avatars1.githubusercontent.com/u/20434801?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carp-lang",
            "html_url": "https://github.com/carp-lang",
            "followers_url": "https://api.github.com/users/carp-lang/followers",
            "following_url": "https://api.github.com/users/carp-lang/following{/other_user}",
            "gists_url": "https://api.github.com/users/carp-lang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carp-lang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carp-lang/subscriptions",
            "organizations_url": "https://api.github.com/users/carp-lang/orgs",
            "repos_url": "https://api.github.com/users/carp-lang/repos",
            "events_url": "https://api.github.com/users/carp-lang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carp-lang/received_events",
            "type": "Organization",
            "site_admin": false
          },
          "repo": {
            "id": 49426320,
            "node_id": "MDEwOlJlcG9zaXRvcnk0OTQyNjMyMA==",
            "name": "Carp",
            "full_name": "carp-lang/Carp",
            "private": false,
            "owner": {
              "login": "carp-lang",
              "id": 20434801,
              "node_id": "MDEyOk9yZ2FuaXphdGlvbjIwNDM0ODAx",
              "avatar_url": "https://avatars1.githubusercontent.com/u/20434801?v=4",
              "gravatar_id": "",
              "url": "https://api.github.com/users/carp-lang",
              "html_url": "https://github.com/carp-lang",
              "followers_url": "https://api.github.com/users/carp-lang/followers",
              "following_url": "https://api.github.com/users/carp-lang/following{/other_user}",
              "gists_url": "https://api.github.com/users/carp-lang/gists{/gist_id}",
              "starred_url": "https://api.github.com/users/carp-lang/starred{/owner}{/repo}",
              "subscriptions_url": "https://api.github.com/users/carp-lang/subscriptions",
              "organizations_url": "https://api.github.com/users/carp-lang/orgs",
              "repos_url": "https://api.github.com/users/carp-lang/repos",
              "events_url": "https://api.github.com/users/carp-lang/events{/privacy}",
              "received_events_url": "https://api.github.com/users/carp-lang/received_events",
              "type": "Organization",
              "site_admin": false
            },
            "html_url": "https://github.com/carp-lang/Carp",
            "description": "A statically typed lisp, without a GC, for real-time applications.",
            "fork": false,
            "url": "https://api.github.com/repos/carp-lang/Carp",
            "forks_url": "https://api.github.com/repos/carp-lang/Carp/forks",
            "keys_url": "https://api.github.com/repos/carp-lang/Carp/keys{/key_id}",
            "collaborators_url": "https://api.github.com/repos/carp-lang/Carp/collaborators{/collaborator}",
            "teams_url": "https://api.github.com/repos/carp-lang/Carp/teams",
            "hooks_url": "https://api.github.com/repos/carp-lang/Carp/hooks",
            "issue_events_url": "https://api.github.com/repos/carp-lang/Carp/issues/events{/number}",
            "events_url": "https://api.github.com/repos/carp-lang/Carp/events",
            "assignees_url": "https://api.github.com/repos/carp-lang/Carp/assignees{/user}",
            "branches_url": "https://api.github.com/repos/carp-lang/Carp/branches{/branch}",
            "tags_url": "https://api.github.com/repos/carp-lang/Carp/tags",
            "blobs_url": "https://api.github.com/repos/carp-lang/Carp/git/blobs{/sha}",
            "git_tags_url": "https://api.github.com/repos/carp-lang/Carp/git/tags{/sha}",
            "git_refs_url": "https://api.github.com/repos/carp-lang/Carp/git/refs{/sha}",
            "trees_url": "https://api.github.com/repos/carp-lang/Carp/git/trees{/sha}",
            "statuses_url": "https://api.github.com/repos/carp-lang/Carp/statuses/{sha}",
            "languages_url": "https://api.github.com/repos/carp-lang/Carp/languages",
            "stargazers_url": "https://api.github.com/repos/carp-lang/Carp/stargazers",
            "contributors_url": "https://api.github.com/repos/carp-lang/Carp/contributors",
            "subscribers_url": "https://api.github.com/repos/carp-lang/Carp/subscribers",
            "subscription_url": "https://api.github.com/repos/carp-lang/Carp/subscription",
            "commits_url": "https://api.github.com/repos/carp-lang/Carp/commits{/sha}",
            "git_commits_url": "https://api.github.com/repos/carp-lang/Carp/git/commits{/sha}",
            "comments_url": "https://api.github.com/repos/carp-lang/Carp/comments{/number}",
            "issue_comment_url": "https://api.github.com/repos/carp-lang/Carp/issues/comments{/number}",
            "contents_url": "https://api.github.com/repos/carp-lang/Carp/contents/{+path}",
            "compare_url": "https://api.github.com/repos/carp-lang/Carp/compare/{base}...{head}",
            "merges_url": "https://api.github.com/repos/carp-lang/Carp/merges",
            "archive_url": "https://api.github.com/repos/carp-lang/Carp/{archive_format}{/ref}",
            "downloads_url": "https://api.github.com/repos/carp-lang/Carp/downloads",
            "issues_url": "https://api.github.com/repos/carp-lang/Carp/issues{/number}",
            "pulls_url": "https://api.github.com/repos/carp-lang/Carp/pulls{/number}",
            "milestones_url": "https://api.github.com/repos/carp-lang/Carp/milestones{/number}",
            "notifications_url": "https://api.github.com/repos/carp-lang/Carp/notifications{?since,all,participating}",
            "labels_url": "https://api.github.com/repos/carp-lang/Carp/labels{/name}",
            "releases_url": "https://api.github.com/repos/carp-lang/Carp/releases{/id}",
            "deployments_url": "https://api.github.com/repos/carp-lang/Carp/deployments",
            "created_at": "2016-01-11T12:54:09Z",
            "updated_at": "2019-05-29T02:11:03Z",
            "pushed_at": "2019-05-27T17:12:38Z",
            "git_url": "git://github.com/carp-lang/Carp.git",
            "ssh_url": "git@github.com:carp-lang/Carp.git",
            "clone_url": "https://github.com/carp-lang/Carp.git",
            "svn_url": "https://github.com/carp-lang/Carp",
            "homepage": "",
            "size": 7892,
            "stargazers_count": 2829,
            "watchers_count": 2829,
            "language": "Haskell",
            "has_issues": true,
            "has_projects": true,
            "has_downloads": true,
            "has_wiki": true,
            "has_pages": true,
            "forks_count": 102,
            "mirror_url": null,
            "archived": false,
            "disabled": false,
            "open_issues_count": 42,
            "license": {
              "key": "other",
              "name": "Other",
              "spdx_id": "NOASSERTION",
              "url": null,
              "node_id": "MDc6TGljZW5zZTA="
            },
            "forks": 102,
            "open_issues": 42,
            "watchers": 2829,
            "default_branch": "master"
          }
        },
        "_links": {
          "self": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/477"
          },
          "html": {
            "href": "https://github.com/carp-lang/Carp/pull/477"
          },
          "issue": {
            "href": "https://api.github.com/repos/carp-lang/Carp/issues/477"
          },
          "comments": {
            "href": "https://api.github.com/repos/carp-lang/Carp/issues/477/comments"
          },
          "review_comments": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/477/comments"
          },
          "review_comment": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/comments{/number}"
          },
          "commits": {
            "href": "https://api.github.com/repos/carp-lang/Carp/pulls/477/commits"
          },
          "statuses": {
            "href": "https://api.github.com/repos/carp-lang/Carp/statuses/beea7be351548c873670b745c33f595b2b397a2c"
          }
        },
        "author_association": "CONTRIBUTOR",
        "merged": false,
        "mergeable": null,
        "rebaseable": null,
        "mergeable_state": "unknown",
        "merged_by": null,
        "comments": 0,
        "review_comments": 0,
        "maintainer_can_modify": true,
        "commits": 1,
        "additions": 0,
        "deletions": 20,
        "changed_files": 1
      }
    },
    "public": true,
    "created_at": "2019-05-29T07:47:47Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9716800023",
    "type": "IssuesEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/476",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/476/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/476/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/476/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/476",
        "id": 449648374,
        "node_id": "MDU6SXNzdWU0NDk2NDgzNzQ=",
        "number": 476,
        "title": "Make error reporting in Eval better",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-29T07:44:44Z",
        "updated_at": "2019-05-29T07:44:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "The error reporting in `Eval` could be better. It’s not always possible to construct an error, especially one with the correct source location; it definitely should be!\r\n\r\nCheers"
      }
    },
    "public": true,
    "created_at": "2019-05-29T07:44:45Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9716792939",
    "type": "IssuesEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/475",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/475/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/475/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/475/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/475",
        "id": 449647916,
        "node_id": "MDU6SXNzdWU0NDk2NDc5MTY=",
        "number": 475,
        "title": "Better constraint weight",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-29T07:43:35Z",
        "updated_at": "2019-05-29T07:43:35Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "The weights for constraints are not an exact science, but still contribute to the error reporting experience. Experimenting with them to get more helpful errors would probably be a good idea.\r\n\r\nCheers"
      }
    },
    "public": true,
    "created_at": "2019-05-29T07:43:35Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9716779868",
    "type": "IssuesEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/474",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/474/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/474/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/474/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/474",
        "id": 449647107,
        "node_id": "MDU6SXNzdWU0NDk2NDcxMDc=",
        "number": 474,
        "title": "Macro errors should show both the calling code and the macro",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-29T07:41:29Z",
        "updated_at": "2019-05-29T07:41:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Debugging macros in Carp is actually quite a nice experience, except that the source location often only shows half of the truth.\r\n\r\nIn an ideal world, we’d have access to both the caller and the macro in the error message and show the error location for both of them!\r\n\r\nCheers"
      }
    },
    "public": true,
    "created_at": "2019-05-29T07:41:29Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  },
  {
    "id": "9716767587",
    "type": "IssuesEvent",
    "actor": {
      "id": 7725188,
      "login": "hellerve",
      "display_login": "hellerve",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hellerve",
      "avatar_url": "https://avatars.githubusercontent.com/u/7725188?"
    },
    "repo": {
      "id": 49426320,
      "name": "carp-lang/Carp",
      "url": "https://api.github.com/repos/carp-lang/Carp"
    },
    "payload": {
      "action": "opened",
      "issue": {
        "url": "https://api.github.com/repos/carp-lang/Carp/issues/473",
        "repository_url": "https://api.github.com/repos/carp-lang/Carp",
        "labels_url": "https://api.github.com/repos/carp-lang/Carp/issues/473/labels{/name}",
        "comments_url": "https://api.github.com/repos/carp-lang/Carp/issues/473/comments",
        "events_url": "https://api.github.com/repos/carp-lang/Carp/issues/473/events",
        "html_url": "https://github.com/carp-lang/Carp/issues/473",
        "id": 449646306,
        "node_id": "MDU6SXNzdWU0NDk2NDYzMDY=",
        "number": 473,
        "title": "Unify long and short error messages",
        "user": {
          "login": "hellerve",
          "id": 7725188,
          "node_id": "MDQ6VXNlcjc3MjUxODg=",
          "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hellerve",
          "html_url": "https://github.com/hellerve",
          "followers_url": "https://api.github.com/users/hellerve/followers",
          "following_url": "https://api.github.com/users/hellerve/following{/other_user}",
          "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions",
          "organizations_url": "https://api.github.com/users/hellerve/orgs",
          "repos_url": "https://api.github.com/users/hellerve/repos",
          "events_url": "https://api.github.com/users/hellerve/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hellerve/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-29T07:39:33Z",
        "updated_at": "2019-05-29T07:39:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "body": "Long error messages are for calling the compiler from the command line, while short error messages are for integrating into editors mostly. Sadly, not all of the error messages are equally helpful or thought out, or even have both forms. This needs to be fixed for a better development experience.\r\n\r\nCheers"
      }
    },
    "public": true,
    "created_at": "2019-05-29T07:39:33Z",
    "org": {
      "id": 20434801,
      "login": "carp-lang",
      "gravatar_id": "",
      "url": "https://api.github.com/orgs/carp-lang",
      "avatar_url": "https://avatars.githubusercontent.com/u/20434801?"
    }
  }
]
